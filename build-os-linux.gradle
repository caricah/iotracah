/*
 *
 * Copyright (c) 2015 Caricah <info@caricah.com>.
 *
 * Caricah licenses this file to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under
 *  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
 *  OF ANY  KIND, either express or implied.  See the License for the specific language
 *  governing permissions and limitations under the License.
 *
 *
 *
 *
 */

import org.apache.tools.ant.filters.*

apply plugin: "nebula.os-package"

ospackage {

    packageName 'iotracah'
    release '1'
    os LINUX
    maintainer 'Bwire J. Peter <info@caricah.com>'
    priority 'optional'
    url 'http://io.tracah.com'
    requires('adduser')
    permissionGroup 'root'
    user 'root'

    into ('/usr/share/iotracah') {

        from(jar.outputs.files) {
            into 'lib'
            fileMode = 0644
        }
        from(configurations.runtime) {
            into 'lib'
            fileMode = 0644
        }
        from('distribution/src/resources/bin') {

            into 'bin'
            fileMode 0755
            exclude '*.bat'
            exclude '*.exe'

            filter(ReplaceTokens, tokens: packaging)
        }

    }

    into(packaging."packaging.iotracah.conf.dir"){
        from('distribution/src/resources/config') {
            filter(ReplaceTokens, tokens: packaging)
            fileMode = 0644
        }
    }

    //Add systemd service.
    into(packaging."packaging.iotracah.systemd.dir"){
        from('distribution/src/packaging/systemd/') {
            include('iotracah.service')
            filter(ReplaceTokens, tokens: packaging)
            fileMode = 0644
        }
    }

    //Add systemd/sysctl.d configuration file.
    into(packaging."packaging.iotracah.systemd.sysctl.dir"){
        from('distribution/src/packaging/systemd/sysctl') {
            include('iotracah.conf')
            filter(ReplaceTokens, tokens: packaging)
            fileMode = 0644
        }
    }

    //Adds systemd/tmpfiles.d configuration file.
    into(packaging."packaging.iotracah.tmpfilesd.dir"){
        from('distribution/src/packaging/systemd/') {
            include('tmp_iotracah.conf')
            rename('tmp_iotracah.conf', 'iotracah.conf')
            filter(ReplaceTokens, tokens: packaging)
            fileMode = 0644
        }
    }

}


task processScripts(type: Copy) {

    packaging.put("build.temporary.scripts.assembly.dir", "$buildDir/tmp/script")

    from "distribution/src/packaging/scripts/"
    into packaging."build.temporary.scripts.assembly.dir"
    fileMode = 0755
    filter(ReplaceTokens, tokens: packaging)

}


buildDeb {

    doFirst {
        packaging.load(new FileInputStream("distribution/deb/packaging.properties"))
        tasks.processScripts.execute()
    }



    packageDescription packaging."packaging.project.description"
    summary packaging."packaging.project.summary"

    preInstall file(packaging."build.temporary.scripts.assembly.dir"+"/preinst")
    postInstall file(packaging."build.temporary.scripts.assembly.dir"+"/postinst")
    preUninstall file(packaging."build.temporary.scripts.assembly.dir"+"/prerm")
    postUninstall file(packaging."build.temporary.scripts.assembly.dir"+"/postrm")

    configurationFile(
            '/etc/iotracah/iotracah.properties\n' +
                    '/etc/iotracah/log4j.properties\n' +
                    '/etc/iotracah/security.ini\n' +
                    '/etc/init.d/iotracah')



    from('distribution/deb/init.d/iotracah'){
        into packaging."packaging.iotracah.int.d.dir"
        fileMode = 0755
        filter(ReplaceTokens, tokens: packaging)
    }

    from('distribution/deb/lintian/') {
        include 'iotracah'
        fileMode = 0644
        into packaging.'packaging.debian.lintian.overrides.dir'
    }

    from('distribution/deb/scripts/') {
        include 'conffiles'
        fileMode = 0644
        into packaging.'packaging.debian.lintian.overrides.dir'
    }

    from('distribution/') {
        include 'copyright'
        fileMode = 0644
        into packaging.'packaging.debian.doc.dir'
    }

}

buildRpm {



    packageDescription packaging."packaging.project.description"
    summary packaging."packaging.project.summary"
    permissionGroup 'root'
    user 'root'


    preInstall file("distribution/rpm/scripts/preinst")
    postInstall file('distribution/rpm/scripts/postinst')
    preUninstall file('distribution/rpm/scripts/prerm')
    postUninstall file('distribution/rpm/scripts/postrm')

    from('distribution/rpm/init.d/iotracah'){
        into '/etc/init.d/iotracah'
        filter(ReplaceTokens, tokens: packaging)
        fileMode = 0755
    }
}

