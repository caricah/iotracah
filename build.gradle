/*
 *
 * Copyright (c) 2015 Caricah <info@caricah.com>.
 *
 * Caricah licenses this file to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under
 *  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
 *  OF ANY  KIND, either express or implied.  See the License for the specific language
 *  governing permissions and limitations under the License.
 *
 *
 *
 *
 */


plugins {
    id "nebula.os-package" version "2.2.6"

}


apply plugin: 'application'
apply plugin: 'java'
apply plugin: "nebula.os-package"
apply plugin: "distribution"

mainClassName = 'com.caricah.iotracah.main.runner.IOTracah'

version '1.0.SNAPSHOT'

jar {
    manifest {
        attributes 'Main-Class': 'com.caricah.iotracah.main.runner.IOTracah',
                'Implementation-Title': 'Internet Of tracah',
                'Implementation-Version': version
    }
}

dependencies {

    compile project(':iotracah-bootstrap')

    runtime project(':iotracah-bootstrap')
    testRuntime project(':iotracah-bootstrap')
    runtime project(':iotracah-core')
    testRuntime project(':iotracah-core')
    runtime project(':datastore:iotracah-datastore-ignite')
    testRuntime project(':datastore:iotracah-datastore-ignite')
    runtime project(':iotracah-server')
    testRuntime project(':iotracah-server')
    runtime project(':server:iotracah-server-http')
    testRuntime project(':server:iotracah-server-http')
    runtime project(':server:iotracah-server-mqtt')
    testRuntime project(':server:iotracah-server-mqtt')
}

allprojects {

    group 'com.caricah.iotracah'

    version version

    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    dependencies {

        compile group: 'commons-configuration', name: 'commons-configuration', version: '1.9'
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.2'
        compile group: 'de.ruedigermoeller', name: 'fst', version: '2.24'

        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.2'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.2'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

apply from: 'package-utils.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '2.7' //version required
}